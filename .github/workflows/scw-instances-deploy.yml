name: "Scaleway instances demo: deploy"
on:
  workflow_dispatch:
#   push:
#     branches:
#     - main

jobs:
  Deploy:
    runs-on: ubuntu-24.04
    env:
        # For terraform provider access
        AWS_ACCESS_KEY_ID: ${{ secrets.SCW_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SCW_SECRET_KEY }}
        # For terraform itself
        TF_VAR_SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        TF_VAR_SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}

        TF_VAR_SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
        TF_VAR_SCW_DEFAULT_ORGANISATION_ID: ${{ secrets.SCW_ORGANISATION_ID }}
        S3_HOSTNAME: https://s3.fr-par.scw.cloud

    defaults:
      run:
        working-directory: ./scaleway-instances

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - name: Set up SSH private key
        run: mkdir ~/.ssh && echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 --decode >~/.ssh/id_ed25519
      - name: Set up license file
        run: echo "${{ secrets.LICENCE }}" | base64 --decode >license.pem
      - name: Set up certificate for domain
        run: echo "${{ secrets.DOMAIN_CERT }}" | base64 --decode >fullchain.pem
      - name: Set up private key for domain
        run: echo "${{ secrets.DOMAIN_KEY }}" | base64 --decode >privkey.pem
      - name: Set up certificate for TLD
        run: echo "${{ secrets.TLD_CERT }}" | base64 --decode >tld-fullchain.pem
      - name: Set up private key for TLD
        run: echo "${{ secrets.TLD_KEY }}" | base64 --decode >tld-privkey.pem

      - run: terraform init

      - run: terraform validate

      - run: terraform fmt -recursive -check

      - run: terraform plan -out=plan.tfplan

      - run: terraform apply plan.tfplan


  setup-saml:
    name: Setup SAML
    needs: Deploy
    permissions:
        # The "id-token: write" permission is required or Machine ID will not be
        # able to authenticate with the cluster.
        id-token: write
        contents: read
    runs-on: ubuntu-24.04
    env:
        TELEPORT_PROXY_ADDR: teleport.thinkahead.dev:443
    defaults:
        run:
          working-directory: ./scaleway-instances
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch Teleport binaries
        uses: teleport-actions/setup@v1
        with:
          version: 15.3.7

      - name: Wait for server to be able to process authentication
        run: |
          for i in $(seq 1 30); do
            if [ "$(curl -X POST https://${TELEPORT_PROXY_ADDR}/v1/webapi/host/credentials -s -o /dev/null -w "%{http_code}")" != "000" ]; then
              exit 0
            fi
            echo "Server currently unavailable. Retrying..."
            sleep 3
          done
          echo "Server unable to process authentication using Machine ID" >&2
          exit 1

      - name: Fetch credentials using Machine ID
        id: auth
        uses: teleport-actions/auth@v2
        with:
          # Use the address of the auth/proxy server for your own cluster.
          proxy: ${{ env.TELEPORT_PROXY_ADDR }}
          # Use the name of the join token resource you created in step 1.
          token: bot-teleport-demo-repo-token
          # Specify the length of time that the generated credentials should be
          # valid for. This is optional and defaults to "1h"
          certificate-ttl: 1h

      - name: Set up Microsoft Active Directory access
        run: tctl create -f azure-connector.yaml
