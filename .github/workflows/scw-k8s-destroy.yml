name: "Scaleway Kubernetes demo: destroy"
on:
  workflow_dispatch:
    inputs:
      database-action:
        description: 'What would you like to do with the database for the Teleport cluster?'
        required: true
        type: choice
        default: destroy
        options:
          - retain
          - destroy

jobs:
  destroy-secrets:
    runs-on: ubuntu-24.04
    env:
      # For terraform provider access
      AWS_ACCESS_KEY_ID: ${{ secrets.SCW_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SCW_SECRET_KEY }}
      TF_VAR_SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
      TF_VAR_SCW_DEFAULT_ORGANISATION_ID: ${{ secrets.SCW_ORGANISATION_ID }}

      # For terraform itself to access Scaleway
      TF_VAR_SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
      TF_VAR_SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}

    defaults:
      run:
        working-directory: ./scaleway-k8s/terraform-secrets

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - name: Set up license file
        run: echo "${{ secrets.LICENCE }}" | base64 --decode >license.pem

      - run: terraform init

      - run: terraform destroy -auto-approve

  destroy-flux:
    needs: [ destroy-secrets ]
    runs-on: ubuntu-24.04
    env:
      # For terraform provider access
      AWS_ACCESS_KEY_ID: ${{ secrets.SCW_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SCW_SECRET_KEY }}
      # For terraform itself to access Scaleway
      TF_VAR_SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
      TF_VAR_SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}

      TF_VAR_GITHUB_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

      TF_VAR_SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
      TF_VAR_SCW_DEFAULT_ORGANISATION_ID: ${{ secrets.SCW_ORGANISATION_ID }}
    defaults:
      run:
        working-directory: ./scaleway-k8s/terraform-flux

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - run: terraform init

      - run: terraform destroy -auto-approve

  destroy-target-resources:
        runs-on: ubuntu-24.04
        env:
            # For terraform provider access to Scaleway bucket
            AWS_ACCESS_KEY_ID: ${{ secrets.SCW_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.SCW_SECRET_KEY }}

            # For terraform itself to access Scaleway
            TF_VAR_SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
            TF_VAR_SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
            TF_VAR_SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
            TF_VAR_SCW_DEFAULT_ORGANISATION_ID: ${{ secrets.SCW_ORGANISATION_ID }}

            # For Azure
            TF_VAR_ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            TF_VAR_ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            TF_VAR_ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            TF_VAR_ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

        defaults:
          run:
            working-directory: ./terraform-common/teleport-targets

        steps:
          - uses: actions/checkout@v4

          - uses: hashicorp/setup-terraform@v3

          - name: generate disposable ssh key
            run: ssh-keygen -t rsa -b 4096 -N "" -C "Disposable CI pipeline key" -f ~/.ssh/id_rsa

          - name: Create files that need to exist for Terraform
            run: echo "sample" >node-invite.tok >db-invite.tok

          - run: terraform init

          - run: terraform destroy -auto-approve

  destroy-cluster:
    needs: [ destroy-flux, destroy-target-resources ]
    runs-on: ubuntu-24.04
    env:
      # For terraform provider access
      AWS_ACCESS_KEY_ID: ${{ secrets.SCW_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SCW_SECRET_KEY }}

      # For terraform itself to access Scaleway
      TF_VAR_SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
      TF_VAR_SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
      TF_VAR_SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
      TF_VAR_SCW_DEFAULT_ORGANISATION_ID: ${{ secrets.SCW_ORGANISATION_ID }}

      # For Azure
      TF_VAR_ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    defaults:
      run:
        working-directory: ./scaleway-k8s/terraform-cluster

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - run: terraform init

      - run: terraform destroy -auto-approve


  destroy-database:
        needs: [destroy-cluster]
        if: ${{ inputs.database-action == 'destroy' }}
        runs-on: ubuntu-24.04
        env:
            # For terraform provider access to Scaleway bucket
            AWS_ACCESS_KEY_ID: ${{ secrets.SCW_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.SCW_SECRET_KEY }}

            # For terraform itself to access Scaleway
            TF_VAR_SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
            TF_VAR_SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
            TF_VAR_SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
            TF_VAR_SCW_DEFAULT_ORGANISATION_ID: ${{ secrets.SCW_ORGANISATION_ID }}

            # For Azure
            TF_VAR_ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            TF_VAR_ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            TF_VAR_ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            TF_VAR_ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

        defaults:
          run:
            working-directory: ./terraform-common/database

        steps:
          - uses: actions/checkout@v4

          - uses: hashicorp/setup-terraform@v3

          - name: Set up SSH private key
            run: mkdir ~/.ssh && echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 --decode >~/.ssh/id_ed25519

          - run: terraform init

          - run: terraform destroy -auto-approve
