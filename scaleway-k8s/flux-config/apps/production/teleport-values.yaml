apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: teleport
  namespace: teleport
spec:
  chart:
    spec:
      version: "^16.0.0"
  values:
    # More info: https://github.dev/gravitational/teleport/blob/4160786a3e6fabd9b0dcd54354820b222a22535b/examples/chart/teleport-cluster/values.yaml
    # Also: https://goteleport.com/docs/reference/helm-reference/teleport-cluster/
    clusterName: teleport.thinkahead.dev
    proxyProtocol: "off"
    proxyListenerMode: multiplex
    enterprise: true
    highAvailability:
      certManager:
        enabled: true
        issuerName: letsencrypt-prod
        issuerKind: ClusterIssuer
    ingress:
      enabled: "true"
      suppressAutomaticWildcards: true  # TODO doesn't appear to work
      spec:
        ingressClassName: nginx
    service:
      type: ClusterIP
    annotations:
      ingress:
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        external-dns.alpha.kubernetes.io/hostname: teleport.thinkahead.dev
    auth:
      teleportConfig:
        # Add a section for configuring the Teleport Access Graph connection.
        access_graph:
          enabled: true
          endpoint: teleport-access-graph.teleport-access-graph.svc.cluster.local:443
          # Omit the `ca` key if your Teleport cluster already trusts the issuing CA.
          ca: /var/run/access-graph/ca.pem

    # Provide the TAG CA to the Teleport Auth Service as a volume.
    # Omit all of the below if your Teleport cluster already trusts the issuing CA.
    extraVolumes:
      - name: tag-ca
        secret:
          secretName: teleport-access-graph-ca

    extraVolumeMounts:
      - name: tag-ca
        mountPath: /var/run/access-graph
