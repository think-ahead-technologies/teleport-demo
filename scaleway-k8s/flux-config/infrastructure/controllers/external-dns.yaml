---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["services","endpoints","pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["networking", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-dns
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: registry.k8s.io/external-dns/external-dns:v0.14.2
        args:
        - --request-timeout=60s
        - --source=ingress # ingress is also possible
        - --domain-filter=thinkahead.dev # (optional) limit to only example.com domains; change to match the zone created above.
        - --provider=scaleway
        envFrom:
        - secretRef:
            name: scaleway-credentials
            namespace: cert-manager
        ### Set if configuring using a config file. Make sure to create the Secret first.
        # - name: SCW_PROFILE
        #   value: "<profile name>"
        # - name: SCW_CONFIG_PATH
        #   value: /etc/scw/config.yaml
    #     volumeMounts:
    #     - name: scw-config
    #       mountPath: /etc/scw/config.yaml
    #       readOnly: true
    # volumes:
    # - name: scw-config
    #   secret:
    #     secretName: scw-config
    ###